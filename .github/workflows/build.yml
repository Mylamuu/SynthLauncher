name: Build and Release SynthLauncher

on:
  push:
    tags:
      - "v*" # Trigger on version tags (e.g., v1.0.0)
  workflow_dispatch: # Allow manual triggering

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: linux-x64
            target: x86_64-unknown-linux-gnu
          - os: macos-latest
            artifact_name: macos-arm
            target: aarch64-apple-darwin
          - os: macos-latest
            artifact_name: macos-x64
            target: x86_64-apple-darwin
          - os: windows-latest
            artifact_name: windows-x64
            target: x86_64-pc-windows-msvc
    
    name: Build (${{ matrix.artifact_name }})
    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          profile: minimal
          override: true
      
      - name: Install OpenSSL (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libssl-dev
      
      - name: Install OpenSSL (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install openssl@3
          echo "OPENSSL_DIR=$(brew --prefix openssl@3)" >> $GITHUB_ENV
      
      - name: Build (Release)
        run: cargo build --release --target ${{ matrix.target }}
      
      - name: Package binary
        shell: bash
        run: |
          mkdir -p release
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            cp target/${{ matrix.target }}/release/synthlauncher.exe release/
          else
            cp target/${{ matrix.target }}/release/synthlauncher release/
          fi
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: synth_launcher-${{ matrix.artifact_name }}
          path: release/
  
  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          name: SynthLauncher ${{ github.ref_name }}
          body: |
            **SynthLauncher** ${{ github.ref_name }}
            - Built for Windows, macOS, and Linux
            - Commit: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }})
          draft: false
          prerelease: false
          files: |
            artifacts/synth_launcher-linux-x64/synthlauncher
            artifacts/synth_launcher-macos-arm/synthlauncher
            artifacts/synth_launcher-macos-x64/synthlauncher
            artifacts/synth_launcher-windows-x64/synthlauncher.exe
